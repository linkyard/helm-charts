apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
{{ include "labels" . | indent 4 }}
spec:
  replicas: 1
  template:
    metadata:
      labels:
{{ include "labels" . | indent 8 }}
      annotations:
        pod.beta.kubernetes.io/init-containers: '[
            {
                "name": "remove-lost-found",
                "image": "busybox:1.25.0",
                "imagePullPolicy": {{ default "IfNotPresent" .Values.imagePullPolicy | quote }},
                "command": ["rm", "-fr", "/var/lib/postgresql/data/lost+found"],
                "volumeMounts": [
                    {
                        "name": "data",
                        "mountPath": "/var/lib/postgresql/data"
                    }
                ]
            }
        ]'
    spec:
      containers:
      - name: postgres
        image: postgres:{{ .Values.version }}
        imagePullPolicy: IfNotPresent
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: password
        - name: PGUSER
          valueFrom:
            secretKeyRef:
              name: {{ template "fullname" . }}
              key: username
        ports:
        - name: postgres
          containerPort: 5432
        livenessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 60
          timeoutSeconds: 3
        readinessProbe:
          exec:
            command:
            - pg_isready
          initialDelaySeconds: 3
          timeoutSeconds: 2
        volumeMounts:
        - name: data
          mountPath: /var/lib/postgresql/data

      - name: metrics
        image: wrouesnel/postgres_exporter:v0.1.1
        imagePullPolicy: IfNotPresent
        env:
        - name: DATA_SOURCE_NAME
          value: postgresql://postgres@localhost:5432?sslmode=disable
        ports:
        - name: metrics
          containerPort: 9187
        resources:
          requests:
            memory: 20Mi
            cpu: 100m

      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: {{ template "fullname" . }}
